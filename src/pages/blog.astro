---
import BlogItem from 'components/BlogItem/BlogItem.astro'
import Layout from 'layouts/Layout.astro'

export type PostFrontMatter = {
  title: string
  summary: string
  publishedAt: string
  /**
  * This can be a local image or a remote image
  * If it's a local image, it will be loaded from the src/assets folder
  * If it's a remote image, it will be loaded from the url (https://example.com/image.jpg)
  */
  thumbnail: string
  thumbnailAlt: string
  thumbnailSource: string
  lang?: string
  langInfo?: string
  isMultiLang?: boolean
  hidden?: boolean
}

const title = 'Blog'
const description = "I'll try to do write as much as possible"
const posts = await Astro.glob<PostFrontMatter>('./blog/en/*.md')
const nonHiddenPosts = posts.filter((post) => !post.frontmatter.hidden)
nonHiddenPosts.sort((a, b) => Date.parse(b.frontmatter.publishedAt) - Date.parse(a.frontmatter.publishedAt))
---

<Layout title={title} description={description}>
  <svg class="hidden" aria-hidden="true" xmlns="http://www.w3.org/2000/svg">
    <symbol id="external-link-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
    </symbol>
  </svg>
  <h1 class="font-bold text-4xl sm:text-5xl tracking-tight mb-6 sm:mb-10">Blog</h1>
  <ul class="space-y-8">
    {
      nonHiddenPosts.map(({ frontmatter, url }) => (
        <li>
          <BlogItem url={url} {...frontmatter} />
        </li>
      ))
    }
  </ul>
</Layout>
